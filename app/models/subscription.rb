# Subscription - Define tracking/sync for a single section of a course
# Generated by a Sync Profile

class Subscription < ApplicationRecord
  belongs_to :sync_profile, optional: true
  belongs_to :section, optional: true
  validates :section_sis_id, uniqueness: true

  def sync(options = {})
    if self.enabled
      msg = "#{self}:\t"
      if self.sis_enrollments
        msg += ' Syncing enrollments...'# if options[:verbose]
        section.sync_sis_enrollments
        section.reload
      else
        msg += ' Not syncing enrollments...'# if options[:verbose]
      end

      if self.maintain_canvas_section
        msg += ' Syncing Canvas section...'# if options[:verbose]
        response = canvas_api_get "sections/sis_section_id:#{section_sis_id}"
        if response.code == '200'
          canvas_section_json = JSON.parse response.body
          if section && canvas_section_json['id'] == section.canvas_id
            # msg += ' Canvas Section ID matches.'# if options[:verbose]
            if canvas_section_json['course_id'] == section.canvas_course_id
              # msg += ' Canvas Course ID matches.'# if options[:verbose]
              #   check enrollments
              not_enrolled_in_canvas = section.enrollments.select {|e| !e.enrolled_in_canvas }
              not_enrolled_in_canvas.each &:post_to_canvas
            end
          else
            msg += ' Canvas section already exists, record course and section ids...'
            section.update canvas_id: canvas_section_json['id'], canvas_course_id: canvas_section_json['course_id']
          end
        else
          # TODO: handle non-400 errors
          # TODO: Create task: User should decide whether to allow auto-create of Canvas section or to input ID for existing section
          # No Canvas section found with matching sis_id
          if section.canvas_id
            response = canvas_api_get "sections/#{section.canvas_id}"
            if response.code == '404'
            #   canvas section does not exist, possibly deleted
            #   check if canvas_course exists
              if section.canvas_course_id
                response = canvas_api_get "courses/#{section.canvas_course_id}"
                if response.code == '404'
                  #   scrap canvas_id and canvas_course_id
                  #   create canvas_course
                  section.update canvas_course_id: nil, canvas_id: nil
                  section.course.create_canvas_course(section.term)
                  section.create_canvas_section
                else
                  # canvas_course exists
                  # course =
                end
              end

            #   create canvas_section
            end
            # check if canvas_section exists with this ID
            # attempt to set sis_id for canvas_section if it exists
          else
            # create canvas course if necessary
            if section.canvas_course_id.nil?
              section.create_canvas_course
              section.reload
            end
            #   create canvas_section
            msg += ' Creating Canvas Section...'# if options[:verbose]
            section.create_canvas_section
            section.enroll_users_in_canvas
          end
        end
        # msg += " Canvas section found."
        #   check that enrollments match
        #   update grades
        section.reload
      else
        msg += ' Not maintaining Canvas section...'# if options[:verbose]
      end

      if self.post_canvas_grades
        # post grades to SIS
        msg += ' Syncing grades...'# if options[:verbose]
        section.sync_canvas_enrollments
      else
        msg += ' Not syncing grades...'# if options[:verbose]
      end
      msg += ' Done.'
      puts msg
    else
      raise 'Sync is disabled for this subscription, please enable before proceeding.'
    end
  end

  def sync_profile_id
    if sync_profile.nil?
      nil
    else
      sync_profile.id
    end
  end

  def enable!
    self.enabled = true
    save
  end

  def enable_all!
    self.enabled = true
    self.sis_enrollments = true
    self.maintain_canvas_section = true
    self.post_canvas_grades = true
    save
  end

  def disable!
    self.enabled = false
    save
  end
  def disable_all!
    self.enabled = false
    self.sis_enrollments = false
    self.maintain_canvas_section = false
    self.post_canvas_grades = false
    save
  end

  def to_s
    section.to_s
  end
end
